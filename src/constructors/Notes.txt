Constructor: special methods, it is a MUST for a class, it might be used to initialize your variables

Object: new ClassName() ----> we are invoking/calling the constructor

accessModifier className(){

}




Task 1:
Employee:
     attribute/fields/variables
name, jobTitle, ID, salary

     add a constructor to initialize all the fields
     add default constructor with no fields

     toString() method will print out the fields
     - instance method (owned by yhe object)
     - return type String
     - it takes NO parameter
     - @override : this is about inheritance you will learn later

Encapsulation Class:
Getters and Setters:
Setter : is used for setting a value for the field
    - might have a condition
Getter : is used to get that value




When do we need this. keyword?
- When your parameter variable is same with the instance variable name